// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-04-06 22:21:42.3406606 +0800 CST m=+0.054865801

package docs

import (
	"bytes"
	"encoding/json"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "get": {
                "description": "用户通过账号密码获取token",
                "produces": [
                    "application/json"
                ],
                "summary": "token获取",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":响应码,\"msg\" : 响应消息,\"data\":{\"token\":token,\"role\":role,\"login_time\":time.Now()}}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\":响应码,\"msg\" : 响应消息}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comprehensive": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "查看司机评价",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":code,\"msg\" : e.GetMsg(code),\"data\":{\"mark\":mark}}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\":code,\"msg\" : e.GetMsg(code)}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/deliver_address": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "获取用户发货位置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\" : code,\t\"msg\" : e.GetMsg(code),\t\"data\":{\"address\":address.Address,\"lng\":address.Lng,\"lat\":address.Lat}}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\" : code,\t\"msg\" : e.GetMsg(code),}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/evaluate": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "评价",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id,mark",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":code,\t\"msg\" : e.GetMsg(code)}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\":code,\t\"msg\" : e.GetMsg(code)}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "用户登录",
                "produces": [
                    "application/json"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "description": "用户名",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/string"
                        }
                    },
                    {
                        "description": "密码",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":响应码,\"msg\" : 响应消息,\t\"data\":{\"login_time\":登录时间}}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\":响应码,\"msg\" : 响应消息}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "信息查看",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\" : code,\t\"msg\" : e.GetMsg(code),\t\"data\":{\"user_id\":auth.User_id,\t\"username\":auth.Username,\t\"password\":auth.Password,\t\"phone_number\":auth.PhoneNumber,\t\"gender\":auth.Gender,\t\"login\":auth.Login,\t\"role\":auth.Role,\"role_id\":auth.RoleId}}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\" : code,\t\"msg\" : e.GetMsg(code)}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/receive_address": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "获取用户收货位置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\" : code,\t\"msg\" : e.GetMsg(code),\t\"data\":{\"address\":address.Address,\"lng\":address.Lng,\"lat\":address.Lat}}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\" : code,\t\"msg\" : e.GetMsg(code),}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "用户注册，并且填写必要的信息,角色分为三类buyer\\seller\\owner，买家、卖家、车主",
                "produces": [
                    "application/json"
                ],
                "summary": "注册",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "手机号",
                        "name": "phone_number",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "性别",
                        "name": "gender",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "角色",
                        "name": "role",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":响应码,\"msg\" : 响应消息}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\":响应码,\"msg\" : 响应消息}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{ Schemes: []string{}}

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface {}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
